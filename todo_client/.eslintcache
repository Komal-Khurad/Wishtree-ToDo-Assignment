[{"E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\index.js":"1","E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\App.js":"2","E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\reportWebVitals.js":"3","E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\Components\\AddTask.js":"4","E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\Components\\DisplayTask.js":"5","E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\Components\\Signup.js":"6","E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\Components\\Login.js":"7","E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\Components\\Admin.js":"8","E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\Components\\Home.js":"9"},{"size":591,"mtime":1607604790643,"results":"10","hashOfConfig":"11"},{"size":1218,"mtime":1607664173441,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3098,"mtime":1607676454846,"results":"14","hashOfConfig":"11"},{"size":4258,"mtime":1607676405450,"results":"15","hashOfConfig":"11"},{"size":6319,"mtime":1607651509209,"results":"16","hashOfConfig":"11"},{"size":3270,"mtime":1607660460626,"results":"17","hashOfConfig":"11"},{"size":3723,"mtime":1607672542324,"results":"18","hashOfConfig":"11"},{"size":273,"mtime":1607625649247,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"yvas41",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\index.js",[],["44","45"],"E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\App.js",[],"E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\reportWebVitals.js",[],"E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\Components\\AddTask.js",["46"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport class AddTask extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state =\r\n        {\r\n            title: '',\r\n            description: '',\r\n            taskStatus:'',\r\n            currentUser: {}\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        axios.get('http://localhost:1337/users')\r\n        .then((res)=>{\r\n            res.data.map(user =>{\r\n                console.log('logged is as: ',user);\r\n                this.setState({\r\n                    currentUser: user\r\n                })\r\n            })\r\n        })\r\n        .catch((err) =>{console.log(err)});\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (event)=>{\r\n        event.preventDefault();\r\n\r\n        const task = {\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            user: this.state.currentUser.id\r\n        }\r\n        axios.post('http://localhost:1337/task/addTask', {task})\r\n        .then((res)=>{\r\n            console.log(res)\r\n            alert(`Task added successfully`)\r\n        })\r\n        .catch((err)=>{\r\n            alert(err.message);\r\n        })\r\n\r\n        this.setState({\r\n            title: '',\r\n            description: ''\r\n        })\r\n        this.props.history.push(`/displayTask/${this.state.currentUser.id}`);\r\n    }\r\n    updateHandler = (e) =>{\r\n        e.preventDefault();\r\n\r\n        console.log(e.target.value);\r\n        console.log(this.props.location.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <center>\r\n                    <h2 style={{padding: '20px'}}> Welcome {this.state.currentUser.fName}</h2>\r\n                    \r\n                    <h1> Add Task</h1>\r\n\r\n                    <form className='form'>\r\n                        <div className='form-group'>\r\n                            <label htmlFor='title'>Title</label>\r\n                            <input type='text' className='form-control' name='title' value={this.state.title} onChange={this.changeHandler} />\r\n                        </div>\r\n                        \r\n                        <div className='form-group'>\r\n                            <label htmlFor='description'>Description</label>\r\n                            <input type='text' className='form-control' name='description' value={this.state.description} onChange={this.changeHandler} />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <button className='btn btn-primary' onClick={this.handleSubmit} disabled={!this.state.title }>Add task</button>\r\n                            <button className='btn btn-primary' style={{float: 'right'}} disabled={!this.state.title }onClick={this.updateHandler}>Update task</button>\r\n                        </div>\r\n                    </form>\r\n\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTask;\r\n","E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\Components\\DisplayTask.js",["47"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport class DisplayTask extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            loading: true,\r\n            tasks : [],\r\n            error: '' ,\r\n            currentUser: {},\r\n            currentTask: {}\r\n        }\r\n    }\r\n    fetchData = () =>{\r\n        axios.get('http://localhost:1337/tasks')\r\n        .then((res)=>{\r\n            this.setState({\r\n                loading: false,\r\n                tasks: res.data,\r\n                error: ''\r\n            })\r\n            return res.data;\r\n        })\r\n        .catch((err)=>{\r\n            this.setState({\r\n                loading: false,\r\n                tasks: [],\r\n                error: err.message\r\n            })\r\n            console.log(err);\r\n\r\n        })\r\n    }\r\n    componentDidMount()\r\n    {\r\n        this.fetchData();\r\n        axios.get('http://localhost:1337/users')\r\n        .then((res)=>{\r\n            res.data.map(user =>{\r\n                console.log('logged is as: ',user);\r\n                this.setState({\r\n                    currentUser: user\r\n                })\r\n            })\r\n        })\r\n        .catch((err) =>{console.log(err)});\r\n    }\r\n\r\n    componentDidUpdate()\r\n    {\r\n        this.fetchData();\r\n    }\r\n    \r\n    addNew = () =>{\r\n        this.props.history.push({pathname:`/addTask/${this.state.currentUser.id}`, state:this.state.currentTask.title});\r\n    }\r\n\r\n    edit = (taskId) =>{\r\n        axios.get(`http://localhost:1337/task/${taskId}`)\r\n            .then((res)=>{\r\n                console.log(res.data)\r\n                this.setState({\r\n                    currentTask: res.data\r\n                })\r\n            })\r\n        \r\n           this.addNew();\r\n\r\n        // axios.put(`http://localhost:1337/task/update/${taskId}`)\r\n        //     .then((res)=>{\r\n        //         this.props.history.push(`/addTask/${this.state.currentUser.id}`);\r\n        //         console.log('task updated successfully', res);\r\n\r\n        //     })\r\n        //     .catch((err)=>console.log('error in task update ', err))\r\n\r\n    }\r\n\r\n    delete(taskId){\r\n        alert('are you sure?');\r\n        axios.delete(`http://localhost:1337/task/delete/${taskId}`)\r\n            .then((res) => \r\n            {\r\n                alert('task deleted successfully')\r\n            })\r\n            .catch((err) => console.log('error while deleting task', err));\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <center>\r\n                    <h1>Tasks Data</h1>\r\n                    <table className='table table-hover'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Title</th>\r\n                                <th>Description</th>\r\n                                <th>Status</th>\r\n                                <th>Edit Task</th>\r\n                                <th>Delete Task</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.tasks.map( task => {\r\n                                    return(\r\n                                        <tr key={task.id}>\r\n                                            <td>{task.title}</td>\r\n                                            <td>{task.description}</td>\r\n                                            <td>{task.status}</td>\r\n                                            <td><button className='btn btn-success' onClick={()=>this.edit(task.id)}>Edit</button></td>\r\n                                            <td><button className='btn btn-danger' onClick={()=>this.delete(task.id)}>Delete</button></td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    \r\n                    </table>\r\n                    <button className='btn btn-primary' onClick={this.addNew}> Add New task</button>\r\n                    \r\n                </center>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DisplayTask\r\n","E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\Components\\Signup.js",["48"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport class Signup extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            fName:'',\r\n            lName:'',\r\n            gender:'',\r\n            dob:'',\r\n            email:'',\r\n            password:'',\r\n\r\n            fNameError: '',\r\n            lNameError: '',\r\n            dobError: '',\r\n            emailError:'',\r\n            passwordError: ''\r\n        }\r\n    }\r\n\r\n    validateForm = async () =>{\r\n        const {fName, lName, dob, email, password} = this.state;\r\n\r\n        var isValid = true;\r\n\r\n        if(fName===''){\r\n            this.setState({\r\n                fNameError: 'First name is required'\r\n            })\r\n            isValid = false\r\n        }\r\n       \r\n        else if(fName!==''){\r\n            this.setState({\r\n                fNameError: ''\r\n            })\r\n            isValid = true\r\n        }\r\n\r\n        if(lName===''){\r\n            console.log('inside lNamw validation')\r\n            this.setState({\r\n                lNameError: 'Last name is required'\r\n            })\r\n            isValid = false\r\n        }\r\n        else if(lName!==''){\r\n            this.setState({\r\n                lNameError: ''\r\n            })\r\n            isValid = true\r\n        }\r\n        if(!email.match(/^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+\\.[a-z]{2,}$/)){\r\n            this.setState({\r\n                emailError: 'Email should contain @ and .'\r\n            })\r\n            isValid = false\r\n            \r\n        }\r\n        else if(email.match(/^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+\\.[a-z]{2,}$/)){\r\n            this.setState({\r\n                emailError: ''\r\n            })\r\n            isValid = true\r\n        }\r\n        if(!password.match(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/))\r\n        {\r\n            this.setState({\r\n                passwordError: 'Password must have 1 special symbol, 1 capital and length must be 8 charactr or greater '\r\n            })\r\n            isValid = false\r\n        }\r\n        else if(password.match(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/)){\r\n            this.setState({\r\n                passwordError: ''\r\n            })\r\n            isValid = true\r\n        }\r\n       \r\n        return isValid;\r\n    }\r\n\r\n    changeHandler = (e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler = async (e) =>{\r\n        e.preventDefault();\r\n        const { fName, lName, gender, dob, email, password } = this.state;\r\n\r\n        // const users = await axios.get('http://localhost:1337/users');\r\n        // console.log('users in db', users);\r\n\r\n        const validForm = this.validateForm();\r\n    \r\n        if(validForm) {\r\n            const user = {\r\n                fName,\r\n                lName,\r\n                gender,\r\n                dob,\r\n                email,\r\n                password,\r\n                isActive: true,\r\n            }\r\n           \r\n            axios.post('http://localhost:1337/user/register', user)\r\n                .then( (res)=>{\r\n                    alert('User Registred successfully! Check Your email to confirm your account')\r\n\r\n                    this.props.history.push('/login');\r\n                })\r\n                .catch( (err)=> console.log(err))\r\n        }\r\n        \r\n        this.setState({\r\n            fName:'',\r\n            lName:'',\r\n            gender:'',\r\n            dob:'',\r\n            email:'',\r\n            password:'',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                \r\n                <center>\r\n                <h2>User Signup</h2>\r\n                    <form className='form' onSubmit={this.submitHandler} autoComplete='off'>\r\n\r\n                        <div className='form-group'>\r\n                            <label>First Name</label>\r\n                            <input type='text' className='form-control' name='fName' value={this.state.fName} onChange={this.changeHandler}/>\r\n                            <pre>{this.state.fNameError}</pre>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Last Name</label>\r\n                            <input type='text' className='form-control' name='lName' value={this.state.lName} onChange={this.changeHandler}/>\r\n                            <pre>{this.state.lNameError}</pre>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <select name=\"gender\" value={this.state.gender} onChange={this.changeHandler} placeholder=\"Gender\">\r\n                                <option>--Gender--</option>\r\n                                <option>Male</option>\r\n                                <option>Female</option>\r\n                                <option>Other</option>\r\n                            </select>\r\n                        </div>\r\n                        \r\n                        <div className='form-group'>\r\n                            <label>DOB</label>\r\n                            <input type='date' className='form-control' name='dob' value={this.state.dob} onChange={this.changeHandler}/>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Email</label>\r\n                            <input type='email' className='form-control' name='email' value={this.state.email} onChange={this.changeHandler}/>\r\n                            <pre>{this.state.emailError}</pre>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Password</label>\r\n                            <input type='password' className='form-control' name='password' value={this.state.password} onChange={this.changeHandler}/>\r\n                            <pre>{this.state.passwordError}</pre>\r\n                        </div>\r\n                        <div>\r\n                            <button type='submit' className='btn btn-primary'>Sign Up</button>&nbsp;&nbsp;&nbsp;\r\n                            <button type='submit' className='btn btn-primary'>Login</button>\r\n                        </div>\r\n\r\n                    </form>\r\n            </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup\r\n","E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\Components\\Login.js",["49"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            email:'',\r\n            password:'',\r\n            allUsers: [],\r\n            adminEmail:'khuradkomal22@yahoo.com',\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:1337/users')\r\n        .then((res)=>{\r\n            this.setState({\r\n                allUsers: res.data\r\n            })\r\n        })\r\n        .catch((err) =>{console.log(err)});\r\n\r\n    }\r\n\r\n    changeHandler = (e) =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    \r\n    submitHandler = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const {email, password, allUsers} = this.state;\r\n\r\n        const user = {\r\n            email,\r\n            password,\r\n        }\r\n        axios.post('http://localhost:1337/user/login', user)\r\n            .then( (res)=>{\r\n                console.log('res=', res.data)\r\n                let authToken = res.data.token;\r\n\r\n                Cookies.set('token', authToken);\r\n\r\n                console.log(Cookies.get())\r\n\r\n                // Adds the token to the header\r\n                axios.defaults.headers.common.Authorization = `Bearer ${authToken}`;\r\n                alert(res.data.message);\r\n\r\n                if(this.state.adminEmail === res.data.data.email)\r\n                {\r\n                    this.props.history.push('/admin');\r\n                }\r\n                else{\r\n                    console.log('id: ', res.data.data.id)\r\n                    this.props.history.push(`/displayTask/${res.data.data.id}`);\r\n                }\r\n            })\r\n            .catch( (err)=> alert(err.message))\r\n\r\n        this.setState({\r\n            email: '',\r\n            password: ''\r\n        })\r\n    }\r\n    signUp = () =>{\r\n        this.props.history.push('/signup')\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <center>\r\n                    <h2>Log In</h2>\r\n                    <div>\r\n                    <form className='form'  autoComplete='off' onSubmit={this.submitHandler}>\r\n\r\n                        <div className='form-group'>\r\n                            <label>Email</label>\r\n                            <input type='email' className='form-control validate' name='email' value={this.state.email} onChange={this.changeHandler}/>\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label>Password</label>\r\n                            <input type='password' className='form-control' name='password' value={this.state.password} onChange={this.changeHandler}/>\r\n                        </div>\r\n                        <div>\r\n                            <button type='submit' className='btn btn-primary'>LogIn</button>&nbsp;&nbsp;&nbsp;\r\n                            <button type='submit' className='btn btn-primary' onClick={this.signUp}>SignUp</button>\r\n                        </div>\r\n                    </form>\r\n                    </div>\r\n                </center> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n","E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\Components\\Admin.js",["50"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport class Admin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            users: []\r\n        }\r\n    }\r\n    changeStatus(userId) {\r\n        this.state.users.map(user=>{\r\n            if(user.id === userId)   \r\n            {       \r\n                console.log('active status', user.isActive)\r\n                // let updatedUser = !user.isActive;\r\n\r\n                axios.put(`http://localhost:1337/user/update/${userId}`)\r\n                .then((res)=>console.log(res))\r\n                .catch((err)=>console.log(err))\r\n            }\r\n        })\r\n    }\r\n\r\n    fetchUsers(){\r\n        axios.get('http://localhost:1337/users')\r\n        .then((res)=>{\r\n            this.setState({\r\n                users: res.data\r\n            })\r\n        })\r\n        .catch((err)=>{\r\n            console.log('admin catch error', err);\r\n        })\r\n    }\r\n    componentDidMount()\r\n    {\r\n        this.fetchUsers();\r\n    }\r\n    componentDidUpdate()\r\n    {\r\n        this.fetchUsers();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <center>\r\n                    <h1>Welcom Admin</h1>\r\n                    <h3 style={{padding: '10px 0px'}}>List of Users</h3>\r\n                </center>\r\n                \r\n                <table className='table table-hover'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Full Name</th>\r\n                            <th>Active Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.users.map(user =>{\r\n                                return(\r\n                                    <tr key={user.id}>\r\n                                        <td>\r\n                                            {user.fName + \" \"+user.lName}\r\n                                            {\r\n                                                user.isActive ? \r\n                                                    <svg width=\"1.8em\" height=\"2em\" viewBox=\"0 0 16 16\" className=\"bi bi-check\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path fillRule=\"evenodd\" d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\" style={{color: 'green'}}/>\r\n                                                    </svg> \r\n                                                : <svg width=\"1.8em\" height=\"2em\" viewBox=\"0 0 16 16\" className=\"bi bi-check\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path fillRule=\"evenodd\" d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\" style={{color: 'red'}}/>\r\n                                                </svg>\r\n                                            }\r\n                                            \r\n                                        </td>\r\n                                        <td>\r\n                                            <button className='btn btn-danger' onClick={()=>this.changeStatus(user.id)}>Deactive</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Admin\r\n","E:\\WishTree\\WishTree_Project\\Wishtree_ToDo_App\\todo_client\\src\\Components\\Home.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":19,"column":31,"nodeType":"57","messageId":"58","endLine":19,"endColumn":33},{"ruleId":"55","severity":1,"message":"56","line":41,"column":31,"nodeType":"57","messageId":"58","endLine":41,"endColumn":33},{"ruleId":"59","severity":1,"message":"60","line":25,"column":30,"nodeType":"61","messageId":"62","endLine":25,"endColumn":33},{"ruleId":"59","severity":1,"message":"63","line":37,"column":33,"nodeType":"61","messageId":"62","endLine":37,"endColumn":41},{"ruleId":"55","severity":1,"message":"56","line":13,"column":34,"nodeType":"57","messageId":"58","endLine":13,"endColumn":36},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'dob' is assigned a value but never used.","Identifier","unusedVar","'allUsers' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]